diff --git a/tensorflow/tensorflow.bzl b/tensorflow/tensorflow.bzl
index 51ef323..e2486ec 100644
--- a/tensorflow/tensorflow.bzl
+++ b/tensorflow/tensorflow.bzl
@@ -332,7 +332,7 @@ def tf_cc_binary(name,
               "//third_party/mkl:intel_binary_blob",
           ],
       ),
-      linkopts=linkopts + _rpath_linkopts(name),
+      linkopts=linkopts + _rpath_linkopts(name) + ["-lexecinfo"],
       **kwargs)
 
 register_extension_info(
@@ -355,7 +355,7 @@ def tf_gen_op_wrapper_cc(name,
   tf_cc_binary(
       name=tool,
       copts=tf_copts(),
-      linkopts=if_not_windows(["-lm"]),
+      linkopts=if_not_windows(["-lm"]) + ["-lexecinfo"],
       linkstatic=1,  # Faster to link this one-time-use binary dynamically
       deps=[op_gen] + deps)
 
@@ -459,7 +459,8 @@ def tf_gen_op_wrappers_cc(name,
       ]),
       copts=tf_copts(),
       alwayslink=1,
-      visibility=visibility)
+      visibility=visibility,
+      linkopts=["-lexecinfo"])
   native.cc_library(
       name=name + "_internal",
       srcs=internalsrcs,
@@ -474,7 +475,8 @@ def tf_gen_op_wrappers_cc(name,
       ]),
       copts=tf_copts(),
       alwayslink=1,
-      visibility=[clean_dep("//tensorflow:internal")])
+      visibility=[clean_dep("//tensorflow:internal")],
+      linkopts=["-lexecinfo"])
 
 # Generates a Python library target wrapping the ops registered in "deps".
 #
@@ -522,7 +524,7 @@ def tf_gen_op_wrapper_py(name,
     deps = [str(Label("//tensorflow/core:" + name + "_op_lib"))]
   tf_cc_binary(
       name=tool_name,
-      linkopts=if_not_windows(["-lm"]) + cc_linkopts,
+      linkopts=if_not_windows(["-lm"]) + cc_linkopts + ["-lexecinfo"],
       copts=tf_copts(),
       linkstatic=1,  # Faster to link this one-time-use binary dynamically
       deps=([
